---
title: "Vowel Project, part 1"
author: 
  - "Selena Buttery"
  - "DS303, SP25"
  - "Prof. Amber Camp"
date: 3/3/25
format: html
toc: true
editor: visual
theme: spacelab
---

## Vowel Project, part 1

You now have in-hand the processed data from your recording sessions. We will use this data to evaluate different aspects of speech, focusing on vowels. First, we will set some ground rules, explore the data, and then create vowel plots. Next class, we will focus on generating hypotheses and applying statistical models.

## Class Rules Around Data Sharing

This data should **not be shared in any public space**. While the data has been anonymized, there are data included that could be potentially identifying–and we all know how small of a class/campus this is! I do not believe any of the information contained in the data set to be harmful, but let's respect everyone's privacy by not sharing the [class dataset]{.underline}.

### Do not:

-   Post the [class dataset]{.underline} publicly (GitHub, etc.)

### You can:

-   Post [your own dataset]{.underline} anywhere you may want

-   Post any products (scripts, graphs, etc.) anywhere you want, *provided they are anonymized*

## Acknowledgements

I'd like to acknowledge the help of two research assistants, who both spent substantial time learning new software and scripting in order to process this data: Lydia Hefel and Logan Lasell. Please thank them when you see them around! Want to work with me on a future project like this? Let me know :)

## Process of... processing

Let me show you some slides about what it took to process this data.

## Let's look at the data!

### Load packages

```{r, echo = FALSE, message = FALSE}
library(tidyverse)

# install.packages("phonR")
library(phonR)
```

### Load data

For this exercise, you can just load your own data.

We'll also do a bit of processing to ensure that the variables are behaving the way we want.

```{r}
# read in data
P105 <- read_csv("data/P105.csv")

# convert variables to factor where needed
convert_to_factor <- function(df, cols) {
  df[cols] <- lapply(df[cols], as.factor)
  return(df)
}

P105 <- convert_to_factor(P101, c("ppt", "word", "ipa", "arpa", "onset", "offset", "environment", "real_word", "sex", "ethnicity", "birthplace", "home_state", "years_lived_hi", "L1", "exposure_langs_yn", "exposure_langs", "speak_other", "item_num", "rep"))

# remove a couple words you won't be needing
P105 <- P105 %>%
  filter(!word %in% c("cot", "caught"))

```

Take a second to examine at the data. There are 100-ish observations of 26 variables.

```{r}
summary(P105)

head(P105)

str(P105)
```

## Variable Dictionary

Here is a brief list of all the variables and what they mean:

-   item_num: The experimental item number

-   rep: The "repeat" number, meaning was this the first, second, or third time the word was read

-   ppt: The participant number

-   word: The word that was read (the *vowel* is the interesting part, but I wanted to contextualize it)

-   f0: The pitch of the speaker's voice in Hz

-   f1: The first formant, which inversely correlates to vowel height (tongue height)

-   f2: The second formant, which correlates to vowel frontness or backness

-   duration: The duration of the word in ms

-   ipa: The vowel symbol from the International Phonetic Alphabet

-   arpa: The vowel symbol (digraph) in the **Advanced Research Projects Agency (ARPAbet)**

-   onset: Whether the beginning of the word was voiced or voiceless

-   offset: Whether the end of the word was voiced or voiceless

-   environment: the voicing environment encasing the vowel

-   real_word: Is this word real or not real?

-   age: The speaker's age

-   years_uni: How many years the speaker has been in college/university

-   sec: The speaker's sex

-   ethnicity: The speaker's ethnicity/race

-   birthplace: The speaker's place of birth

-   home_state: The speaker's home state/country

-   years_lived: How many years the speaker has lived In HI, expressed as a categorical range

-   L1: The speaker's first language

-   exposure_langs_yn: Yes/No whether the speaker had exposure to another language growing up

-   exposure_langs: Which language(s) the speaker was exposed to growing up

-   age_learned_en: The age the speaker learned English

-   speak_other: Other languages spoken by the speaker

## Vowel Plot

The first two variables I'd like you to explore are F1 and F2. You'll use `phonR` to make your own vowel plot.

### Calculate your vowel space area

```{r}
poly.area <- with(P105, vowelMeansPolygonArea(f1, f2, ipa, poly.order = c("i", 
    "ɛ", "ɑ", "o", "u", "æ", "ɪ", "ʌ"), group = ppt))
hull.area <- with(P105, convexHullArea(f1, f2, group = ppt))
rbind(poly.area, hull.area)

```

### Basic plotting

Make your first vowel plot!

```{r}
with(P105, plotVowels(f1, f2))

```

Start building on this plot and making it look better.

```{r}
par(mfrow = c(2, 2))
with(P105, plotVowels(f1, f2, var.sty.by = ipa, var.col.by = ipa, pretty = TRUE))
```

Add the IPA symbols to the visualization.

```{r}
with(P105, plotVowels(f1, f2, ipa, plot.tokens = TRUE, pch.tokens = ipa, 
    cex.tokens = 1.2, alpha.tokens = 0.4, plot.means = TRUE, pch.means = ipa, 
    cex.means = 4, var.col.by = ipa, family = "Charis SIL", pretty = TRUE))
```

Add ellipses. It's going to try to include outliers. Let's see what it looks like first.

```{r}
with(P105, plotVowels(f1, f2, ipa, plot.tokens = TRUE, pch.tokens = ipa, cex.tokens = 1.2, alpha.tokens = 0.2, plot.means = TRUE, pch.means = ipa, cex.means = 2, var.col.by = ipa, ellipse.line = TRUE, pretty = TRUE))
```

Here is another version:

```{r}
with(P105, plotVowels(f1, f2, ipa, group = ipa, plot.tokens = FALSE, plot.means = TRUE, 
    pch.means = ipa, cex.means = 2, var.col.by = ipa, ellipse.fill = TRUE, pretty = TRUE))
```

### `phonR` vignette

Go to this `phonR` vignette and scroll down to view different plot types you could generate. You will submit a vowel plot of your own data for credit (next week), and you may also find it valuable to create additional vowel plots with the entire class's data, taking into account things like `sex` or some other variable.

<https://drammock.github.io/phonR/>

### Evaluate your data

What do you notice about your data/plots compared to the examples on the `phonR` site? Is there anything you need help with? It is not unheard of to have outlier cases, but if you are suspicious about any particulate data point, let Amber know.

-   I notice that my (i) is further away from the other letters than on the exmaples I viewed on that website.

### Plot the class data

If there is time, maybe try plotting the entire class's data.

```{r}
# read in data
all_data <- read_csv("data/DS303_combined.csv")

# convert variables to factor where needed
all_data <- convert_to_factor(all_data, c("ppt", "word", "ipa", "arpa", "onset", "offset", "environment", "real_word", "sex", "ethnicity", "birthplace", "home_state", "years_lived_hi", "L1", "exposure_langs_yn", "exposure_langs", "speak_other", "item_num", "rep"))

# remove a couple words you won't be needing
all_data <- all_data %>%
  filter(!word %in% c("cot", "caught"))

# plot
with(all_data, plotVowels(f1, f2, ipa, plot.tokens = TRUE, pch.tokens = ipa, cex.tokens = 1.2, alpha.tokens = 0.2, plot.means = TRUE, pch.means = ipa, cex.means = 2, var.col.by = ipa, ellipse.line = TRUE, pretty = TRUE))

```

## Troubleshoot

Why aren't the plots square? Can you try to figure this out? Has to do with an update...
